@echo off
REM Script de v√©rification du d√©ploiement SMART-EXCEL

title SMART-EXCEL - V√©rification D√©ploiement
color 0A

echo ========================================
echo   V√âRIFICATION D√âPLOIEMENT - SMART-EXCEL
echo ========================================
echo.

echo [INFO] V√©rification des URLs de d√©ploiement...
echo.

REM Variables √† configurer apr√®s d√©ploiement
set "BACKEND_URL="
set "FRONTEND_URL="

echo üìã INFORMATIONS DE D√âPLOIEMENT :
echo.
echo üîó Repository GitHub :
echo    https://github.com/OuattaraTech/SMART-EXCEL.git
echo.
echo üöÄ Plateformes de d√©ploiement :
echo    Backend  : Railway.app (gratuit)
echo    Frontend : Vercel.com (gratuit)
echo.

if "%BACKEND_URL%"=="" (
    echo ‚ö†Ô∏è  URLs non configur√©es - √Ä faire apr√®s d√©ploiement
    echo.
    echo üìù √âTAPES √Ä SUIVRE :
    echo.
    echo 1Ô∏è‚É£  D√âPLOYER LE BACKEND SUR RAILWAY :
    echo    ‚Ä¢ Aller sur https://railway.app
    echo    ‚Ä¢ "Login with GitHub"
    echo    ‚Ä¢ "New Project" ‚Üí "Deploy from GitHub repo"
    echo    ‚Ä¢ S√©lectionner "OuattaraTech/SMART-EXCEL"
    echo    ‚Ä¢ Root Directory: "backend"
    echo    ‚Ä¢ Variables d'environnement:
    echo      OPENAI_API_KEY=your-openai-api-key-here
    echo      FLASK_ENV=production
    echo      PORT=5000
    echo.
    echo 2Ô∏è‚É£  D√âPLOYER LE FRONTEND SUR VERCEL :
    echo    ‚Ä¢ Aller sur https://vercel.com
    echo    ‚Ä¢ "Continue with GitHub"
    echo    ‚Ä¢ "New Project" ‚Üí Import "SMART-EXCEL"
    echo    ‚Ä¢ Root Directory: "frontend"
    echo    ‚Ä¢ Framework: "Create React App"
    echo    ‚Ä¢ Variable d'environnement:
    echo      REACT_APP_API_URL=https://your-railway-url.railway.app/api
    echo.
    echo 3Ô∏è‚É£  CONFIGURER CORS :
    echo    ‚Ä¢ Dans Railway, ajouter variable:
    echo      CORS_ORIGINS=https://your-vercel-url.vercel.app
    echo    ‚Ä¢ Red√©ployer le backend
    echo.
) else (
    echo ‚úÖ URLs configur√©es :
    echo    Backend  : %BACKEND_URL%
    echo    Frontend : %FRONTEND_URL%
    echo.
    
    echo [TEST] V√©rification des endpoints...
    echo.
    
    REM Test du backend (n√©cessite curl)
    curl -s %BACKEND_URL%/api/health >nul 2>&1
    if errorlevel 1 (
        echo ‚ùå Backend non accessible : %BACKEND_URL%
    ) else (
        echo ‚úÖ Backend accessible : %BACKEND_URL%
    )
    
    echo.
    echo [INFO] Test du frontend dans le navigateur...
    start %FRONTEND_URL%
)

echo.
echo ========================================
echo         CONFIGURATION ACTUELLE
echo ========================================
echo.

echo üìÅ Fichiers de d√©ploiement pr√©sents :
if exist "Procfile" (echo ‚úÖ Procfile) else (echo ‚ùå Procfile manquant)
if exist "runtime.txt" (echo ‚úÖ runtime.txt) else (echo ‚ùå runtime.txt manquant)
if exist "frontend\vercel.json" (echo ‚úÖ vercel.json) else (echo ‚ùå vercel.json manquant)
if exist "backend\requirements.txt" (echo ‚úÖ requirements.txt) else (echo ‚ùå requirements.txt manquant)

echo.
echo üîß Variables d'environnement √† configurer :
echo.
echo    BACKEND (Railway) :
echo    ‚Ä¢ OPENAI_API_KEY = your-openai-api-key-here
echo    ‚Ä¢ FLASK_ENV = production
echo    ‚Ä¢ PORT = 5000
echo    ‚Ä¢ CORS_ORIGINS = https://your-vercel-url
echo.
echo    FRONTEND (Vercel) :
echo    ‚Ä¢ REACT_APP_API_URL = https://your-railway-url/api
echo.

echo üìñ Pour le guide complet :
echo    Ouvrir : DEPLOIEMENT_GITHUB.md
echo.

set /p choice="Voulez-vous ouvrir le guide de d√©ploiement ? (o/n): "
if /i "%choice%"=="o" (
    start DEPLOIEMENT_GITHUB.md
)

echo.
echo üéØ PROCHAINES √âTAPES :
echo    1. Suivre le guide DEPLOIEMENT_GITHUB.md
echo    2. D√©ployer sur Railway + Vercel
echo    3. Tester l'application en ligne
echo    4. Partager l'URL publique !
echo.

pause
